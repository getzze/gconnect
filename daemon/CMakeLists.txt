#
#
# Main target

set (GCONNECT_DAEMON_NAME  "${PROJECT_NAME}d")

# Any dependencies.  Note that it isn't actually necessary to add
# glib-2.0 or gobject-2.0 (it is done implicitly), but for this
# template project we don't actually depend on anything else, so we
# added it for illustrative purposes.
file(STRINGS 
    "${CMAKE_BINARY_DIR}/lib/gconnect-${GCONNECT_VERSION_API}.deps"
    GCONNECT_VALA_PACKAGES)

list(APPEND GCONNECT_VALA_PACKAGES
	#gdk-3.0
    libnotify)
    
# Compile Vala sources to C
vala_precompile_target(
  "${GCONNECT_DAEMON_NAME}-vala"
  GCONNECT_MAIN_SOURCES
  ${CMAKE_BINARY_DIR}/lib/gconnect-${GCONNECT_VERSION_API}.vapi
  main.vala
  PACKAGES ${GCONNECT_VALA_PACKAGES}
  DEPENDS "${GCONNECT_LIBRARY_NAME}-vala")

# Tell CMake to create an executable named "gconnectd"
add_executable(${GCONNECT_DAEMON_NAME}
	${GCONNECT_MAIN_SOURCES})

# Make sure the Vala sources are compiled to C before attempting to
# build the executable.
add_dependencies("${GCONNECT_DAEMON_NAME}" "${GCONNECT_DAEMON_NAME}-vala")

# We need to add the directory where the C header for our library is
# installed, otherwise we'll get an error from the C compiler.
set_target_properties(${GCONNECT_DAEMON_NAME} PROPERTIES
	INCLUDE_DIRECTORIES ${CMAKE_BINARY_DIR}/lib)

# Any libraries that your tests need to link to should go here.
# Usually this will just be your library.
target_link_libraries(${GCONNECT_DAEMON_NAME}
    ${GCONNECT_LIBRARY_NAME})

# Install the executable.
install (TARGETS ${GCONNECT_DAEMON_NAME}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})

# Generate a .gitignore
file(WRITE  ".gitignore" "# Automatically generated by CMake, do not modify.\n")
foreach(file
    ".gitignore"
    "${GCONNECT_DAEMON_NAME}${CMAKE_EXECUTABLE_SUFFIX}")
  file(APPEND ".gitignore" "/${file}\n")
endforeach(file)
foreach(file ${GCONNECT_MAIN_SOURCES})
  string(REPLACE "${CMAKE_CURRENT_BINARY_DIR}/" "" file ${file})
  file(APPEND ".gitignore" "/${file}\n")
endforeach(file)
