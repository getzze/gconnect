#
#
# Unit Tests Target

# You can re-type these if you prefer, but putting them in variables
# makes it easier to reuse them, and helps explain what each command
# needs to include.

# These are the Vala sources you want to build your library out of.
set(MY_PROJECT_UNIT_TESTS_VALA_SOURCES
    test_case.vala
    test_main.vala
    test_my_class.vala)

# Any custom vapis.
set(MY_PROJECT_VALA_CUSTOM_VAPIS
  ${CMAKE_BINARY_DIR}/${LIBRARY_PATH}/${MY_PROJECT_PKG_NAME}.vapi)

# Compile Vala -> C
vala_precompile_target(
  test-${PROJECT_NAME}-vala
  MY_PROJECT_C_TEST_SOURCES
  ${MY_PROJECT_VALA_CUSTOM_VAPIS}
  ${MY_PROJECT_UNIT_TESTS_VALA_SOURCES}
  DEPENDS "${MY_PROJECT_LIBRARY_NAME}-vala")

set (TEST_EXECUTABLE_NAME ${PROJECT_NAME}_unit_tests)

add_executable(${PROJECT_NAME}_unit_tests
    ${MY_PROJECT_C_TEST_SOURCES})

add_dependencies("${PROJECT_NAME}_unit_tests" "test-${PROJECT_NAME}-vala")

set_target_properties(${TEST_EXECUTABLE_NAME} PROPERTIES
	INCLUDE_DIRECTORIES ${CMAKE_BINARY_DIR}/${LIBRARY_PATH})

target_link_libraries(${TEST_EXECUTABLE_NAME} ${MY_PROJECT_LIBRARY_NAME} -lm)

# List of tests in the test executable that you want to execute.  Note
# that this is a list; to add additional tests you don't need to quote
# them, just use whitespace to separate them and you're done.
set(MY_PROJECT_TESTS
    /my_class/foo)

# Add the tests in the MY_PROJECT_TESTS list to ctest
foreach(test_name ${MY_PROJECT_TESTS})
    add_test(NAME ${test_name}
        COMMAND $<TARGET_FILE:${TEST_EXECUTABLE_NAME}> -p ${test_name})
endforeach(test_name)

# Generate a .gitignore
file(WRITE  ".gitignore" "# Automatically generated by CMake, do not modify.\n")
foreach(file
    ".gitignore"
    "${TEST_EXECUTABLE_NAME}${CMAKE_EXECUTABLE_SUFFIX}")
  file(APPEND ".gitignore" "/${file}\n")
endforeach(file)
foreach(file ${MY_PROJECT_C_TEST_SOURCES})
  string(REPLACE "${CMAKE_CURRENT_BINARY_DIR}/" "" file ${file})
  file(APPEND ".gitignore" "/${file}\n")
endforeach(file)
